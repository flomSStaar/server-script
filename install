#!/bin/bash

# Get the directory of the running script
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
MODULES_DIR="$DIR/modules"

source "$MODULES_DIR/utils/variables.sh"
source "$MODULES_DIR/utils/functions.sh"

usage() {
  echo
  echo -e "usage: \033[32m$(basename "$0")\033[0m [options]"
  echo
  echo "This script installs a server with modules."
  echo
  echo "options:"
  echo "   -h, --help        Show this help"
  echo "   --all             Install all modules"
  echo "   --common          Install common packages"
  echo "   --docker          Install Docker"
  echo "   --fail2ban        Install Fail2ban"
  echo "   --traefik         Install Traefik"
  echo "   --mariadb         Install MariaDB"
  echo "   --postgres        Install PostgreSQL"
  echo "   --uptime-kuma     Install Uptime Kuma"
  echo "   --minio           Install MinIO"
  echo
}

check_root

# Load the configuration
source "./server.conf"

# Initialize variables
COMMON_PACKAGES=false
DOCKER=false
FAIL2BAN=false
TRAEFIK=false
MARIADB=false
POSTGRES=false
UPTIME_KUMA=false
MINIO=false

# Parse the options
for ARG in "$@"; do
  case "$ARG" in
    -h|--help)
      usage
      exit 0
      ;;
    --all)
      POSTGRES=true
      MARIADB=true
      DOCKER=true
      FAIL2BAN=true
      TRAEFIK=true
      COMMON_PACKAGES=true
      UPTIME_KUMA=true
      MINIO=true
      ;;
    --common)
      COMMON_PACKAGES=true
      ;;
    --docker)
      DOCKER=true
      ;;
    --fail2ban)
      FAIL2BAN=true
      ;;
    --traefik)
      TRAEFIK=true
      ;;
    --mariadb)
      MARIADB=true
      ;;
    --postgres)
      POSTGRES=true
      ;;
    --uptime-kuma)
      UPTIME_KUMA=true
      ;;
    --minio)
      MINIO=true
      ;;
  esac
done

if [[ ! -d "$ROOT_SCRIPT_DIR" ]]; then
  info "Initializing ROOT_SCRIPT_DIR"

  mkdir -p "$ROOT_SCRIPT_DIR"

  success "ROOT_SCRIPT_DIR initialized"
fi

if [[ ! -d "$SECRETS_DIR" ]]; then
  info "Initializing SECRETS_DIR"

  mkdir -p "$SECRETS_DIR"
  chmod 700 "$SECRETS_DIR"

  success "SECRETS_DIR initialized"
fi

if [[ ! -d "$SERVICES_DIR" ]]; then
  info "Initializing SERVICES_DIR"

  mkdir -p "$SERVICES_DIR"

  success "SERVICES_DIR initialized"
fi

## Common packages
if [ "$COMMON_PACKAGES" = true ]; then
  source "$MODULES_DIR/common/setup.sh"
fi

## Docker
if [ "$DOCKER" = true ]; then
  source "$MODULES_DIR/docker/setup.sh"
fi

## Fail2ban
if [ "$FAIL2BAN" = true ]; then
  source "$MODULES_DIR/fail2ban/setup.sh"
fi

## Traefik
if [ "$TRAEFIK" = true ]; then
  source "$MODULES_DIR/traefik/setup.sh"
fi

## MariaDB
if [ "$MARIADB" = true ]; then
  source "$MODULES_DIR/mariadb/setup.sh"
fi

## PostgreSQL
if [ "$POSTGRES" = true ]; then
  source "$MODULES_DIR/postgres/setup.sh"
fi

## Uptime Kuma
if [ "$UPTIME_KUMA" = true ]; then
  source "$MODULES_DIR/uptime-kuma/setup.sh"
fi

## MinIO
if [ "$MINIO" = true ]; then
  source "$MODULES_DIR/minio/setup.sh"
fi

echo
success "Installation complete"
info "Please reboot the server to apply the changes"
exit 0
